generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String?  @unique
  password  String? // Hashed password
  createdAt DateTime @default(now())
  verified  Boolean  @default(false)

  carts             Cart[]
  orders            Order[]
  EmailVerification EmailVerification[]
}

model EmailVerification {
  id        Int      @id @default(autoincrement())
  userId    Int
  email     String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tag {
  key         String  @id
  name        String
  description String?

  pizzas Pizza[] @relation("PizzaTags")
}

model Pizza {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Decimal  @db.Decimal(6, 2)
  ingredients String[]

  tags      Tag[]       @relation("PizzaTags")
  CartItem  CartItem[]
  OrderItem OrderItem[]
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int? // null = anonymous
  createdAt DateTime @default(now())

  user  User?      @relation(fields: [userId], references: [id])
  items CartItem[]
}

model CartItem {
  cartId   Int
  pizzaId  Int
  quantity Int

  cart  Cart  @relation(fields: [cartId], references: [id], onDelete: Cascade)
  pizza Pizza @relation(fields: [pizzaId], references: [id])

  @@id([cartId, pizzaId])
  @@map("cart_item")
}

enum OrderStatus {
  pending
  delivered
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int?
  createdAt DateTime    @default(now())
  status    OrderStatus @default(pending)
  total     Decimal     @db.Decimal(6, 2)

  user      User?       @relation(fields: [userId], references: [id])
  sessionId String?
  items     OrderItem[]
}

model OrderItem {
  orderId Int
  pizzaId Int

  unitPrice  Decimal @db.Decimal(6, 2)
  quantity   Int
  totalPrice Decimal @db.Decimal(6, 2)

  order Order  @relation(fields: [orderId], references: [id], onDelete: Cascade)
  pizza Pizza? @relation(fields: [pizzaId], references: [id])

  @@id([orderId, pizzaId])
  @@map("order_item")
}
